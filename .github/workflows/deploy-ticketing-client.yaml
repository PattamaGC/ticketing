# kaitest1
name: deploy-ticketing-client

on:
  push:
    branches:
      - master
      - feature-*
#   paths:
#     - 'client/**'
    tags: 
      - 'v*.*.*'

jobs:
  build:
    if: "!contains(github.ref, 'master')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set docker tag to git tag version if the workflow is triggered by push tag (for release candidate).
        if: "contains(github.ref, 'tags')"
        run: |
          echo "TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV 
          echo $TAG_VERSION > release_candidate-tag.txt

      - name: Set docker tag to github.sha if the workflow is triggered by push branch (for feature branch).
        if: "contains(github.ref, 'feature')"
        run: |
          echo "TAG_VERSION=${{ github.sha }}" >> $GITHUB_ENV
          echo $TAG_VERSION > release_candidate-tag.txt
           
      - run: cd client && docker build -t zeabixdockerrepo/ticketing-client:$TAG_VERSION .
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker push zeabixdockerrepo/ticketing-client:$TAG_VERSION
 
      - uses: actions/upload-artifact@v3
        with: 
          name: code-coverage-report
          path: release_candidate-tag.txt

  deploy:
    runs-on: ubuntu-latest 
    needs: build   
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy to dev environment as this pushed from feature branch.
        if: "contains(github.ref, 'feature')"
             

      - run: echo "TAG_VERSION_TEMP=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV 
      - name: envsubst-action        
        uses: danielr1996/envsubst-action@1.1.0
        env:
            TAG_VERSION: '${{env.TAG_VERSION_TEMP}}'
        with:
          input: client/deployment/client-depl.yaml
          output: client/deployment/client-depl-go.yaml
          
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS_DEV }}'
          cluster-name: ${{ secrets.CLUSTER_NAME_DEV }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP_DEV }}  
      - run: kubectl apply -f client/deployment/client-depl-go.yaml
    
          
          
          
