# kaitest1
name: deploy-master

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      app_dir:
        required: true
        type: string
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true

jobs:

  deploy:
    name: ${{github.ref}}
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2 

      - name: Feature branch - use SHA as docker tag from github.sha 
        if: "contains(github.ref, 'feature')" 
        run: |
          echo "TAG_VERSION_TEMP=${{ github.sha }}" >> $GITHUB_ENV
       #  echo "CLUSTER_NAME_TEMP=${{ secrets.CLUSTER_NAME_DEV }}" >> $GITHUB_ENV
       #  echo "CLUSTER_RESOURCE_GROUP_TEMP=${{ secrets.CLUSTER_RESOURCE_GROUP_DEV }}" >> $GITHUB_ENV
       #  echo "AZURE_CREDENTIALS_TEMP=${{ secrets.AZURE_CREDENTIALS_DEV }}" >> $GITHUB_ENV
       #  echo "::set-env name=AZURE_CREDENTIALS_TEMP::$AZURE_CREDENTIALS_TEMP"
       #  echo "::set-env name=CLUSTER_NAME_TEMP::$CLUSTER_NAME_TEMP"
       #  echo "::set-env name=CLUSTER_RESOURCE_GROUP_TEMP::$CLUSTER_RESOURCE_GROUP_TEMP"
      
      - name: Release candidate - use git tag as docker tag from github.ref
        if: "contains(github.ref, 'tags')"
        run: |
          echo "TAG_VERSION_TEMP=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV 

      - name: Production - download git tag saved in artifact
        if: "contains(github.ref, 'master')" 
        uses: actions/download-artifact@v3
        with:
          name: release_candidate_tag
        
      - name: Production - use git tag as docker tag from downloaded artifact
        if: "contains(github.ref, 'master')"
        run: |
          TAG_VERSION_TEMP=$(release_candidate_tag.txt)

      - name: envsubst-action        
        uses: danielr1996/envsubst-action@1.1.0
        env:
            TAG_VERSION: '${{env.TAG_VERSION_TEMP}}'
        with:
          input: client/deployment/client-depl.yaml
          output: client/deployment/client-depl-go.yaml
          
      - name: Set KubeConfig for feature branch
        if: "contains(github.ref, 'feature')"
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS_DEV }}'
          cluster-name: ${{ secrets.CLUSTER_NAME_DEV }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP_DEV }}
      
      - name: Set KubeConfig for Release
        if: "contains(github.ref, 'tags')"
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS_QA }}'
          cluster-name: ${{ secrets.CLUSTER_NAME_QA }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP_QA }}

      - name: Set KubeConfig for Master
        if: "contains(github.ref, 'master')"
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP }}


      - run: kubectl apply -f client/deployment/client-depl-go.yaml

  deploy-prod:
    if: "contains(github.ref, 'master')"  
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2 
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: deploy-ticketing-client.yaml
          workflow_conclusion: success
      - run: cd release_candidate_tag && ls -al && cat release_candidate_tag.txt

     # - uses: montudor/action-zip@v1
     #   with:
     #     args: unzip -qq release_candidate_tag.txt.zip -d release_candidate_tag
            
      - name: Production - use git tag as docker tag from downloaded artifact
        if: "contains(github.ref, 'master')"
        run: |
          echo "TAG_VERSION_TEMP=$(cat release_candidate_tag/release_candidate_tag.txt)"  >> $GITHUB_ENV
    
      - name: envsubst-action        
        uses: danielr1996/envsubst-action@1.1.0
        env:
            TAG_VERSION: '${{env.TAG_VERSION_TEMP}}'
        with:
          input: client/deployment/client-depl.yaml
          output: client/deployment/client-depl-go.yaml

      - name: Set KubeConfig for Master
        if: "contains(github.ref, 'master')"
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP }}

      - run: kubectl apply -f client/deployment/client-depl-go.yaml
          
          
