# kaitest1
name: deploy-master

on:
  workflow_call:
    inputs:
      docker_tag:
        required: true
        type: string
      workflow_name:
        required: true
        type: string
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
      creds:
        required: true
      cluster-name:
        required: true
      resource-group:
        required: true
env:
  WORKFLOW_NAME: ${{inputs.workflow_name}}
  DOCKER_TAG: ${{inputs.docker_tag}}
 # test1: client/deployment/client-depl.yaml
 # test2: client/deployment/client-depl-go.yaml

jobs:

  deploy:
    name: ${{github.ref}}
    runs-on: ubuntu-latest     
    steps:
      - name: Prepare environment
        id: Prepare
        run: |
          echo $WORKFLOW_NAME
          strarr=(${WORKFLOW_NAME//"_"/ })
          echo "APP_ENV : ${strarr[0]} "  
          echo "APP_NAME : ${strarr[1]}" 
          echo "APP_DIR : ${strarr[2]} "  
          echo "APP_ENV=${strarr[0]}" >> $GITHUB_ENV
          echo "APP_NAME=${strarr[1]}" >> $GITHUB_ENV
          echo "APP_DIR=${strarr[2]}" >> $GITHUB_ENV

          echo "manifest_original=${strarr[2]}/deployment/${strarr[2]}-depl.yaml" >> $GITHUB_ENV
          echo "manifest_with_tag=${strarr[2]}/deployment/${strarr[2]}-depl-go.yaml" >> $GITHUB_ENV
      
      - name: Download artifact of docker tag for prod.
        if: "contains(github.ref, 'master')"       
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: workflow-release-client.yaml
          workflow_conclusion: success

      - run: cd release_candidate_tag && ls -al && cat release_candidate_tag.txt

      - name: Prepare Docker Tag
        id: Prepare_docker_tag
        run: |

          if [[ $APP_ENV == "DEV" ]] 
          then
            echo "TAG_VERSION_TARGET=${DOCKER_TAG}" >> $GITHUB_ENV
       
          elif [[ $APP_ENV == "RELEASE" ]]   
          then   
            echo "TAG_VERSION_TARGET=${DOCKER_TAG}" >> $GITHUB_ENV
          
          elif [[ $APP_ENV == "PROD" ]]   
          then   
            echo "TAG_VERSION_TARGET=$(cat release_candidate_tag/release_candidate_tag.txt)"  >> $GITHUB_ENV
          fi
     
      - uses: actions/checkout@v2 
      - run: |
          echo $APP_ENV
          echo $APP_NAME
          echo $APP_DIR
    
      - name: Prepare deployment manifest file
        uses: danielr1996/envsubst-action@1.1.0
        env:
            TAG_VERSION: '${{env.TAG_VERSION_TARGET}}'
        with:
          input: ${{env.manifest_original}}
          output: ${{env.manifest_with_tag}}

      - name: Set KubeConfig
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.creds }}'
          cluster-name: ${{ secrets.cluster-name }}
          resource-group: ${{ secrets.resource-group }}
      
      - name: Docker Registry login
        run:  docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.docker_username }}
          DOCKER_PASSWORD: ${{ secrets.docker_password }}

      - name: Apply kubectl to deploy new app container to kubernetes cluster
        run: kubectl apply -f $APP_DIR/deployment/$APP_DIR-depl-go.yaml
      


 deploy-prod:
    if: "contains(github.ref, 'master')"  
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2 
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: deploy-ticketing-client.yaml
          workflow_conclusion: success
      - run: cd release_candidate_tag && ls -al && cat release_candidate_tag.txt

     # - uses: montudor/action-zip@v1
     #   with:
     #     args: unzip -qq release_candidate_tag.txt.zip -d release_candidate_tag
            
      - name: Production - use git tag as docker tag from downloaded artifact
        if: "contains(github.ref, 'master')"
        run: |
          echo "TAG_VERSION_TEMP=$(cat release_candidate_tag/release_candidate_tag.txt)"  >> $GITHUB_ENV
    
      - name: envsubst-action        
        uses: danielr1996/envsubst-action@1.1.0
        env:
            TAG_VERSION: '${{env.TAG_VERSION_TEMP}}'
        with:
          input: client/deployment/client-depl.yaml
          output: client/deployment/client-depl-go.yaml

      - name: Set KubeConfig for Master
        if: "contains(github.ref, 'master')"
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP }}

      - run: kubectl apply -f client/deployment/client-depl-go.yaml
          